[info]
name = -D FW_NAME='"senSInt Tactile Signal Generator - stereo"'
; Windows users may get this error while compiling the firmware:
; "error: unknown option `max-count=1`"
; In this case you have to specify the version (-DGIT_TAG) and revision (-DGIT_REV) manually.
; The version string refers to semantic versioning (see https://semver.org/)
; vX.Y.z with X=major, Y=minor, z=patch
; The revision string is the shortened ID (7 HEX digits) of the most recent commit.
; EXAMPLE: -DGIT_REV='"1a2b3c4"' -DGIT_TAG='"v1.0.0"'
; Replace call of the python script with the following:
; version = -DGIT_REV='"xxxxxx"' -DGIT_TAG='"v0.0.0"'
version = !python git_rev_macro.py


; You can specify the sensor setup by setting the following values:
;    ______________________________________
;   |    left foot     |    right foot     |
;   |------------------|-------------------|
;   |      ____.--.    |    .--.____       |
;   |    /     [A] \   |   / [A]     \     |
;   |   /          |   |   |          \    |
;   |  |       [a] |   |   | [a]       |   |
;   |  | [b]       |   |   |       [b] |   |
;   |  |         _/    |    \_         |   |
;   |  |       /       |       \       |   |
;   |  |      |        |        |      |   |
;   |  |      |        |        |      |   |
;   |  |       \       |       /       |   |
;   |   \  [B] /       |       \ [B]  /    |
;   |    \____/        |        \____/     |
;   |__________________|___________________|
;
;   0: vertical (A + B)
;   1: horizontal (a + b)
[setup]
orientation = -D SENSINT_ORIENTATION=0


; You can specify the debug level by setting the following values:
;   0: disable debugging
;   1: basic mode - prints control flow to serial
;   2: verbose mode - addtionally prints states and values
[debug]
level = -D SENSINT_DEBUG=0


; You can specify the build configuration by setting the following values:
; MODE
;   0: development mode - (slower and larger binary) provides additional features, e.g. changing settings via serial
;   1: release mode - (faster and smaller binary) provides only the minimum features required for the insole
; DATA
;   0: I2C
;   1: GPIO - this only uses control messages and can not record sensor values
[build]
mode = -D SENSINT_BUILD_MODE=1
data = -D SENSINT_BUILD_DATA=1


; You can specify which type of sensor should be used
;   0: FSR
;   1: slider, potentiometer
[sensor]
type = -D SENSINT_SENSOR=0


; You can specify which configuration should be used for the I2C communication based on your wiring
;   0: Wire
;   1: Wire1
[i2c]
wire = -D SENSINT_WIRE=0


[base]
framework = arduino
lib_ldf_mode = deep+
lib_extra_dirs =
  ../../shared_libs
  ../generator_shared_libs
; TODO: change the port to your deivce's serial port
; upload_port = /dev/cu.usbmodem114866501 ; horizontal , right
; upload_port = /dev/cu.usbmodem113435501 ; vertical , right
; upload_port = /dev/cu.usbmodem113435301 ; horizontal , left
upload_port = /dev/cu.usbmodem114860201 ; vertical , left
monitor_speed = 115200
monitor_port = ${base.upload_port}
monitor_filters = time


[env:teensy3_5]
extends = base, build_flags
platform = teensy
board = teensy35
build_flags =
  -D TEENSY32=1
  ${info.name}
  ${info.version}
  ${debug.level}
  ${build.mode}
  ${build.data}
  ${setup.orientation}
  ${sensor.type}
  ${i2c.wire}


[env:teensy4_0]
extends = base, build_flags
platform = teensy
board = teensy40
build_flags =
  -D TEENSY40=1
  ${info.name}
  ${info.version}
  ${debug.level}
  ${build.mode}
  ${build.data}
  ${setup.orientation}
  ${sensor.type}
  ${i2c.wire}


[env:teensy4_1]
extends = base, build_flags
platform = teensy
board = teensy41
build_flags =
  -D TEENSY41=1
  ${info.name}
  ${info.version}
  ${debug.level}
  ${build.mode}
  ${build.data}
  ${setup.orientation}
  ${sensor.type}
  ${i2c.wire}
