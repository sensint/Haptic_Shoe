[info]
name = -D FW_NAME='"senSInt Shoe Controller - Remote"'
; Windows users may get this error while compiling the firmware:
; "error: unknown option `max-count=1`"
; In this case you have to specify the version (-DGIT_TAG) and revision (-DGIT_REV) manually.
; The version string refers to semantic versioning (see https://semver.org/)
; vX.Y.z with X=major, Y=minor, z=patch
; The revision string is the shortened ID (7 HEX digits) of the most recent commit.
; EXAMPLE: -DGIT_REV='"1a2b3c4"' -DGIT_TAG='"v1.0.0"'
; Replace call of the python script with the following:
; version = -DGIT_REV='"xxxxxx"' -DGIT_TAG='"v0.0.0"'
version = !python git_rev_macro.py


; You can specify the side by setting the following values:
;   0: left
;   1: right
[shoe]
side = -D SENSINT_SHOE=0


; You can specify the debug level by setting the following values:
;   0: disable debugging
;   1: basic mode - prints control flow to serial
;   2: verbose mode - addtionally prints states and values
[debug]
level = -D SENSINT_DEBUG=0


; You can specify the build configuration by setting the following values:
; MODE
;   0: development mode - (slower and larger binary) provides additional features, e.g. changing settings via serial
;   1: release mode - (faster and smaller binary) provides only the minimum features required for the insole
; DATA
;   0: I2C
;   1: GPIO - this only uses control messages and can not record sensor values
[build]
mode = -D SENSINT_BUILD_MODE=1
data = -D SENSINT_BUILD_DATA=1


[base]
framework = arduino
lib_ldf_mode = deep+
lib_extra_dirs =
  ../../shared_libs
  ../controller_shared_libs
lib_deps =
  pfeerick/elapsedMillis @ ^1.0.6
  adafruit/Adafruit BNO055 @ ^1.6.0
  ; adafruit/Adafruit BNO055@^1.5.2
  fastled/FastLED
; TODO: change the port to your deivce's serial port
upload_port = /dev/cu.usbserial-11101
monitor_speed = 115200
monitor_port = ${base.upload_port}
monitor_filters = time


; This configuration is the default configuration for the ESP32 platform.
; It uses a more recent version of the ESP32 for Aruino library, which is needed for the BLE communication.
; Hence, it is recommended to use this configuration for the development of the firmware.
[env:esp32]
extends = base
platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.2
board = esp32dev
build_flags =
  -DESP32=1
  -DSENSINT_WIRE=0
  ${info.name}
  ${info.version}
  ${debug.level}
  ${build.mode}
  ${build.data}
  ${shoe.side}


; This configuration is outdated and will be removed in the future.
; Please use the following configuration instead: env:esp32
[env:esp32_backup]
extends = base
platform = espressif32
board = esp32dev
build_flags =
  -DESP32=1
  -DSENSINT_WIRE=0
  ${info.name}
  ${info.version}
  ${debug.level}
  ${build.mode}
  ${build.data}
  ${shoe.side}


[env:pico]
extends = base
platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.2
board = m5stick-c
build_flags =
  -DPICO=1
  -DESP32=1
  -DSENSINT_WIRE=0
  ${info.name}
  ${info.version}
  ${debug.level}
  ${build.mode}
  ${build.data}
  ${shoe.side}
